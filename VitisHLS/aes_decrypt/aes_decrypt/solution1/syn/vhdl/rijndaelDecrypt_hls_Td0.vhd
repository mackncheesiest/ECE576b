-- ==============================================================
-- Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity rijndaelDecrypt_hls_Td0_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          addr1      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce1       : in std_logic; 
          q1         : out std_logic_vector(DWIDTH-1 downto 0);
          addr2      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce2       : in std_logic; 
          q2         : out std_logic_vector(DWIDTH-1 downto 0);
          addr3      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce3       : in std_logic; 
          q3         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of rijndaelDecrypt_hls_Td0_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
signal addr1_tmp : std_logic_vector(AWIDTH-1 downto 0); 
signal addr2_tmp : std_logic_vector(AWIDTH-1 downto 0); 
signal addr3_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem0 : mem_array := (
    0 => "01010001111101001010011101010000", 
    1 => "01111110010000010110010101010011", 
    2 => "00011010000101111010010011000011", 
    3 => "00111010001001110101111010010110", 
    4 => "00111011101010110110101111001011", 
    5 => "00011111100111010100010111110001", 
    6 => "10101100111110100101100010101011", 
    7 => "01001011111000110000001110010011", 
    8 => "00100000001100001111101001010101", 
    9 => "10101101011101100110110111110110", 
    10 => "10001000110011000111011010010001", 
    11 => "11110101000000100100110000100101", 
    12 => "01001111111001011101011111111100", 
    13 => "11000101001010101100101111010111", 
    14 => "00100110001101010100010010000000", 
    15 => "10110101011000101010001110001111", 
    16 => "11011110101100010101101001001001", 
    17 => "00100101101110100001101101100111", 
    18 => "01000101111010100000111010011000", 
    19 => "01011101111111101100000011100001", 
    20 => "11000011001011110111010100000010", 
    21 => "10000001010011001111000000010010", 
    22 => "10001101010001101001011110100011", 
    23 => "01101011110100111111100111000110", 
    24 => "00000011100011110101111111100111", 
    25 => "00010101100100101001110010010101", 
    26 => "10111111011011010111101011101011", 
    27 => "10010101010100100101100111011010", 
    28 => "11010100101111101000001100101101", 
    29 => "01011000011101000010000111010011", 
    30 => "01001001111000000110100100101001", 
    31 => "10001110110010011100100001000100", 
    32 => "01110101110000101000100101101010", 
    33 => "11110100100011100111100101111000", 
    34 => "10011001010110000011111001101011", 
    35 => "00100111101110010111000111011101", 
    36 => "10111110111000010100111110110110", 
    37 => "11110000100010001010110100010111", 
    38 => "11001001001000001010110001100110", 
    39 => "01111101110011100011101010110100", 
    40 => "01100011110111110100101000011000", 
    41 => "11100101000110100011000110000010", 
    42 => "10010111010100010011001101100000", 
    43 => "01100010010100110111111101000101", 
    44 => "10110001011001000111011111100000", 
    45 => "10111011011010111010111010000100", 
    46 => "11111110100000011010000000011100", 
    47 => "11111001000010000010101110010100", 
    48 => "01110000010010000110100001011000", 
    49 => "10001111010001011111110100011001", 
    50 => "10010100110111100110110010000111", 
    51 => "01010010011110111111100010110111", 
    52 => "10101011011100111101001100100011", 
    53 => "01110010010010110000001011100010", 
    54 => "11100011000111111000111101010111", 
    55 => "01100110010101011010101100101010", 
    56 => "10110010111010110010100000000111", 
    57 => "00101111101101011100001000000011", 
    58 => "10000110110001010111101110011010", 
    59 => "11010011001101110000100010100101", 
    60 => "00110000001010001000011111110010", 
    61 => "00100011101111111010010110110010", 
    62 => "00000010000000110110101010111010", 
    63 => "11101101000101101000001001011100", 
    64 => "10001010110011110001110000101011", 
    65 => "10100111011110011011010010010010", 
    66 => "11110011000001111111001011110000", 
    67 => "01001110011010011110001010100001", 
    68 => "01100101110110101111010011001101", 
    69 => "00000110000001011011111011010101", 
    70 => "11010001001101000110001000011111", 
    71 => "11000100101001101111111010001010", 
    72 => "00110100001011100101001110011101", 
    73 => "10100010111100110101010110100000", 
    74 => "00000101100010101110000100110010", 
    75 => "10100100111101101110101101110101", 
    76 => "00001011100000111110110000111001", 
    77 => "01000000011000001110111110101010", 
    78 => "01011110011100011001111100000110", 
    79 => "10111101011011100001000001010001", 
    80 => "00111110001000011000101011111001", 
    81 => "10010110110111010000011000111101", 
    82 => "11011101001111100000010110101110", 
    83 => "01001101111001101011110101000110", 
    84 => "10010001010101001000110110110101", 
    85 => "01110001110001000101110100000101", 
    86 => "00000100000001101101010001101111", 
    87 => "01100000010100000001010111111111", 
    88 => "00011001100110001111101100100100", 
    89 => "11010110101111011110100110010111", 
    90 => "10001001010000000100001111001100", 
    91 => "01100111110110011001111001110111", 
    92 => "10110000111010000100001010111101", 
    93 => "00000111100010011000101110001000", 
    94 => "11100111000110010101101100111000", 
    95 => "01111001110010001110111011011011", 
    96 => "10100001011111000000101001000111", 
    97 => "01111100010000100000111111101001", 
    98 => "11111000100001000001111011001001", 
    99 => "00000000000000000000000000000000", 
    100 => "00001001100000001000011010000011", 
    101 => "00110010001010111110110101001000", 
    102 => "00011110000100010111000010101100", 
    103 => "01101100010110100111001001001110", 
    104 => "11111101000011101111111111111011", 
    105 => "00001111100001010011100001010110", 
    106 => "00111101101011101101010100011110", 
    107 => "00110110001011010011100100100111", 
    108 => "00001010000011111101100101100100", 
    109 => "01101000010111001010011000100001", 
    110 => "10011011010110110101010011010001", 
    111 => "00100100001101100010111000111010", 
    112 => "00001100000010100110011110110001", 
    113 => "10010011010101111110011100001111", 
    114 => "10110100111011101001011011010010", 
    115 => "00011011100110111001000110011110", 
    116 => "10000000110000001100010101001111", 
    117 => "01100001110111000010000010100010", 
    118 => "01011010011101110100101101101001", 
    119 => "00011100000100100001101000010110", 
    120 => "11100010100100111011101000001010", 
    121 => "11000000101000000010101011100101", 
    122 => "00111100001000101110000001000011", 
    123 => "00010010000110110001011100011101", 
    124 => "00001110000010010000110100001011", 
    125 => "11110010100010111100011110101101", 
    126 => "00101101101101101010100010111001", 
    127 => "00010100000111101010100111001000", 
    128 => "01010111111100010001100110000101", 
    129 => "10101111011101010000011101001100", 
    130 => "11101110100110011101110110111011", 
    131 => "10100011011111110110000011111101", 
    132 => "11110111000000010010011010011111", 
    133 => "01011100011100101111010110111100", 
    134 => "01000100011001100011101111000101", 
    135 => "01011011111110110111111000110100", 
    136 => "10001011010000110010100101110110", 
    137 => "11001011001000111100011011011100", 
    138 => "10110110111011011111110001101000", 
    139 => "10111000111001001111000101100011", 
    140 => "11010111001100011101110011001010", 
    141 => "01000010011000111000010100010000", 
    142 => "00010011100101110010001001000000", 
    143 => "10000100110001100001000100100000", 
    144 => "10000101010010100010010001111101", 
    145 => "11010010101110110011110111111000", 
    146 => "10101110111110010011001000010001", 
    147 => "11000111001010011010000101101101", 
    148 => "00011101100111100010111101001011", 
    149 => "11011100101100100011000011110011", 
    150 => "00001101100001100101001011101100", 
    151 => "01110111110000011110001111010000", 
    152 => "00101011101100110001011001101100", 
    153 => "10101001011100001011100110011001", 
    154 => "00010001100101000100100011111010", 
    155 => "01000111111010010110010000100010", 
    156 => "10101000111111001000110011000100", 
    157 => "10100000111100000011111100011010", 
    158 => "01010110011111010010110011011000", 
    159 => "00100010001100111001000011101111", 
    160 => "10000111010010010100111011000111", 
    161 => "11011001001110001101000111000001", 
    162 => "10001100110010101010001011111110", 
    163 => "10011000110101000000101100110110", 
    164 => "10100110111101011000000111001111", 
    165 => "10100101011110101101111000101000", 
    166 => "11011010101101111000111000100110", 
    167 => "00111111101011011011111110100100", 
    168 => "00101100001110101001110111100100", 
    169 => "01010000011110001001001000001101", 
    170 => "01101010010111111100110010011011", 
    171 => "01010100011111100100011001100010", 
    172 => "11110110100011010001001111000010", 
    173 => "10010000110110001011100011101000", 
    174 => "00101110001110011111011101011110", 
    175 => "10000010110000111010111111110101", 
    176 => "10011111010111011000000010111110", 
    177 => "01101001110100001001001101111100", 
    178 => "01101111110101010010110110101001", 
    179 => "11001111001001010001001010110011", 
    180 => "11001000101011001001100100111011", 
    181 => "00010000000110000111110110100111", 
    182 => "11101000100111000110001101101110", 
    183 => "11011011001110111011101101111011", 
    184 => "11001101001001100111100000001001", 
    185 => "01101110010110010001100011110100", 
    186 => "11101100100110101011011100000001", 
    187 => "10000011010011111001101010101000", 
    188 => "11100110100101010110111001100101", 
    189 => "10101010111111111110011001111110", 
    190 => "00100001101111001100111100001000", 
    191 => "11101111000101011110100011100110", 
    192 => "10111010111001111001101111011001", 
    193 => "01001010011011110011011011001110", 
    194 => "11101010100111110000100111010100", 
    195 => "00101001101100000111110011010110", 
    196 => "00110001101001001011001010101111", 
    197 => "00101010001111110010001100110001", 
    198 => "11000110101001011001010000110000", 
    199 => "00110101101000100110011011000000", 
    200 => "01110100010011101011110000110111", 
    201 => "11111100100000101100101010100110", 
    202 => "11100000100100001101000010110000", 
    203 => "00110011101001111101100000010101", 
    204 => "11110001000001001001100001001010", 
    205 => "01000001111011001101101011110111", 
    206 => "01111111110011010101000000001110", 
    207 => "00010111100100011111011000101111", 
    208 => "01110110010011011101011010001101", 
    209 => "01000011111011111011000001001101", 
    210 => "11001100101010100100110101010100", 
    211 => "11100100100101100000010011011111", 
    212 => "10011110110100011011010111100011", 
    213 => "01001100011010101000100000011011", 
    214 => "11000001001011000001111110111000", 
    215 => "01000110011001010101000101111111", 
    216 => "10011101010111101110101000000100", 
    217 => "00000001100011000011010101011101", 
    218 => "11111010100001110111010001110011", 
    219 => "11111011000010110100000100101110", 
    220 => "10110011011001110001110101011010", 
    221 => "10010010110110111101001001010010", 
    222 => "11101001000100000101011000110011", 
    223 => "01101101110101100100011100010011", 
    224 => "10011010110101110110000110001100", 
    225 => "00110111101000010000110001111010", 
    226 => "01011001111110000001010010001110", 
    227 => "11101011000100110011110010001001", 
    228 => "11001110101010010010011111101110", 
    229 => "10110111011000011100100100110101", 
    230 => "11100001000111001110010111101101", 
    231 => "01111010010001111011000100111100", 
    232 => "10011100110100101101111101011001", 
    233 => "01010101111100100111001100111111", 
    234 => "00011000000101001100111001111001", 
    235 => "01110011110001110011011110111111", 
    236 => "01010011111101111100110111101010", 
    237 => "01011111111111011010101001011011", 
    238 => "11011111001111010110111100010100", 
    239 => "01111000010001001101101110000110", 
    240 => "11001010101011111111001110000001", 
    241 => "10111001011010001100010000111110", 
    242 => "00111000001001000011010000101100", 
    243 => "11000010101000110100000001011111", 
    244 => "00010110000111011100001101110010", 
    245 => "10111100111000100010010100001100", 
    246 => "00101000001111000100100110001011", 
    247 => "11111111000011011001010101000001", 
    248 => "00111001101010000000000101110001", 
    249 => "00001000000011001011001111011110", 
    250 => "11011000101101001110010010011100", 
    251 => "01100100010101101100000110010000", 
    252 => "01111011110010111000010001100001", 
    253 => "11010101001100101011011001110000", 
    254 => "01001000011011000101110001110100", 
    255 => "11010000101110000101011101000010" );
signal mem1 : mem_array := (
    0 => "01010001111101001010011101010000", 
    1 => "01111110010000010110010101010011", 
    2 => "00011010000101111010010011000011", 
    3 => "00111010001001110101111010010110", 
    4 => "00111011101010110110101111001011", 
    5 => "00011111100111010100010111110001", 
    6 => "10101100111110100101100010101011", 
    7 => "01001011111000110000001110010011", 
    8 => "00100000001100001111101001010101", 
    9 => "10101101011101100110110111110110", 
    10 => "10001000110011000111011010010001", 
    11 => "11110101000000100100110000100101", 
    12 => "01001111111001011101011111111100", 
    13 => "11000101001010101100101111010111", 
    14 => "00100110001101010100010010000000", 
    15 => "10110101011000101010001110001111", 
    16 => "11011110101100010101101001001001", 
    17 => "00100101101110100001101101100111", 
    18 => "01000101111010100000111010011000", 
    19 => "01011101111111101100000011100001", 
    20 => "11000011001011110111010100000010", 
    21 => "10000001010011001111000000010010", 
    22 => "10001101010001101001011110100011", 
    23 => "01101011110100111111100111000110", 
    24 => "00000011100011110101111111100111", 
    25 => "00010101100100101001110010010101", 
    26 => "10111111011011010111101011101011", 
    27 => "10010101010100100101100111011010", 
    28 => "11010100101111101000001100101101", 
    29 => "01011000011101000010000111010011", 
    30 => "01001001111000000110100100101001", 
    31 => "10001110110010011100100001000100", 
    32 => "01110101110000101000100101101010", 
    33 => "11110100100011100111100101111000", 
    34 => "10011001010110000011111001101011", 
    35 => "00100111101110010111000111011101", 
    36 => "10111110111000010100111110110110", 
    37 => "11110000100010001010110100010111", 
    38 => "11001001001000001010110001100110", 
    39 => "01111101110011100011101010110100", 
    40 => "01100011110111110100101000011000", 
    41 => "11100101000110100011000110000010", 
    42 => "10010111010100010011001101100000", 
    43 => "01100010010100110111111101000101", 
    44 => "10110001011001000111011111100000", 
    45 => "10111011011010111010111010000100", 
    46 => "11111110100000011010000000011100", 
    47 => "11111001000010000010101110010100", 
    48 => "01110000010010000110100001011000", 
    49 => "10001111010001011111110100011001", 
    50 => "10010100110111100110110010000111", 
    51 => "01010010011110111111100010110111", 
    52 => "10101011011100111101001100100011", 
    53 => "01110010010010110000001011100010", 
    54 => "11100011000111111000111101010111", 
    55 => "01100110010101011010101100101010", 
    56 => "10110010111010110010100000000111", 
    57 => "00101111101101011100001000000011", 
    58 => "10000110110001010111101110011010", 
    59 => "11010011001101110000100010100101", 
    60 => "00110000001010001000011111110010", 
    61 => "00100011101111111010010110110010", 
    62 => "00000010000000110110101010111010", 
    63 => "11101101000101101000001001011100", 
    64 => "10001010110011110001110000101011", 
    65 => "10100111011110011011010010010010", 
    66 => "11110011000001111111001011110000", 
    67 => "01001110011010011110001010100001", 
    68 => "01100101110110101111010011001101", 
    69 => "00000110000001011011111011010101", 
    70 => "11010001001101000110001000011111", 
    71 => "11000100101001101111111010001010", 
    72 => "00110100001011100101001110011101", 
    73 => "10100010111100110101010110100000", 
    74 => "00000101100010101110000100110010", 
    75 => "10100100111101101110101101110101", 
    76 => "00001011100000111110110000111001", 
    77 => "01000000011000001110111110101010", 
    78 => "01011110011100011001111100000110", 
    79 => "10111101011011100001000001010001", 
    80 => "00111110001000011000101011111001", 
    81 => "10010110110111010000011000111101", 
    82 => "11011101001111100000010110101110", 
    83 => "01001101111001101011110101000110", 
    84 => "10010001010101001000110110110101", 
    85 => "01110001110001000101110100000101", 
    86 => "00000100000001101101010001101111", 
    87 => "01100000010100000001010111111111", 
    88 => "00011001100110001111101100100100", 
    89 => "11010110101111011110100110010111", 
    90 => "10001001010000000100001111001100", 
    91 => "01100111110110011001111001110111", 
    92 => "10110000111010000100001010111101", 
    93 => "00000111100010011000101110001000", 
    94 => "11100111000110010101101100111000", 
    95 => "01111001110010001110111011011011", 
    96 => "10100001011111000000101001000111", 
    97 => "01111100010000100000111111101001", 
    98 => "11111000100001000001111011001001", 
    99 => "00000000000000000000000000000000", 
    100 => "00001001100000001000011010000011", 
    101 => "00110010001010111110110101001000", 
    102 => "00011110000100010111000010101100", 
    103 => "01101100010110100111001001001110", 
    104 => "11111101000011101111111111111011", 
    105 => "00001111100001010011100001010110", 
    106 => "00111101101011101101010100011110", 
    107 => "00110110001011010011100100100111", 
    108 => "00001010000011111101100101100100", 
    109 => "01101000010111001010011000100001", 
    110 => "10011011010110110101010011010001", 
    111 => "00100100001101100010111000111010", 
    112 => "00001100000010100110011110110001", 
    113 => "10010011010101111110011100001111", 
    114 => "10110100111011101001011011010010", 
    115 => "00011011100110111001000110011110", 
    116 => "10000000110000001100010101001111", 
    117 => "01100001110111000010000010100010", 
    118 => "01011010011101110100101101101001", 
    119 => "00011100000100100001101000010110", 
    120 => "11100010100100111011101000001010", 
    121 => "11000000101000000010101011100101", 
    122 => "00111100001000101110000001000011", 
    123 => "00010010000110110001011100011101", 
    124 => "00001110000010010000110100001011", 
    125 => "11110010100010111100011110101101", 
    126 => "00101101101101101010100010111001", 
    127 => "00010100000111101010100111001000", 
    128 => "01010111111100010001100110000101", 
    129 => "10101111011101010000011101001100", 
    130 => "11101110100110011101110110111011", 
    131 => "10100011011111110110000011111101", 
    132 => "11110111000000010010011010011111", 
    133 => "01011100011100101111010110111100", 
    134 => "01000100011001100011101111000101", 
    135 => "01011011111110110111111000110100", 
    136 => "10001011010000110010100101110110", 
    137 => "11001011001000111100011011011100", 
    138 => "10110110111011011111110001101000", 
    139 => "10111000111001001111000101100011", 
    140 => "11010111001100011101110011001010", 
    141 => "01000010011000111000010100010000", 
    142 => "00010011100101110010001001000000", 
    143 => "10000100110001100001000100100000", 
    144 => "10000101010010100010010001111101", 
    145 => "11010010101110110011110111111000", 
    146 => "10101110111110010011001000010001", 
    147 => "11000111001010011010000101101101", 
    148 => "00011101100111100010111101001011", 
    149 => "11011100101100100011000011110011", 
    150 => "00001101100001100101001011101100", 
    151 => "01110111110000011110001111010000", 
    152 => "00101011101100110001011001101100", 
    153 => "10101001011100001011100110011001", 
    154 => "00010001100101000100100011111010", 
    155 => "01000111111010010110010000100010", 
    156 => "10101000111111001000110011000100", 
    157 => "10100000111100000011111100011010", 
    158 => "01010110011111010010110011011000", 
    159 => "00100010001100111001000011101111", 
    160 => "10000111010010010100111011000111", 
    161 => "11011001001110001101000111000001", 
    162 => "10001100110010101010001011111110", 
    163 => "10011000110101000000101100110110", 
    164 => "10100110111101011000000111001111", 
    165 => "10100101011110101101111000101000", 
    166 => "11011010101101111000111000100110", 
    167 => "00111111101011011011111110100100", 
    168 => "00101100001110101001110111100100", 
    169 => "01010000011110001001001000001101", 
    170 => "01101010010111111100110010011011", 
    171 => "01010100011111100100011001100010", 
    172 => "11110110100011010001001111000010", 
    173 => "10010000110110001011100011101000", 
    174 => "00101110001110011111011101011110", 
    175 => "10000010110000111010111111110101", 
    176 => "10011111010111011000000010111110", 
    177 => "01101001110100001001001101111100", 
    178 => "01101111110101010010110110101001", 
    179 => "11001111001001010001001010110011", 
    180 => "11001000101011001001100100111011", 
    181 => "00010000000110000111110110100111", 
    182 => "11101000100111000110001101101110", 
    183 => "11011011001110111011101101111011", 
    184 => "11001101001001100111100000001001", 
    185 => "01101110010110010001100011110100", 
    186 => "11101100100110101011011100000001", 
    187 => "10000011010011111001101010101000", 
    188 => "11100110100101010110111001100101", 
    189 => "10101010111111111110011001111110", 
    190 => "00100001101111001100111100001000", 
    191 => "11101111000101011110100011100110", 
    192 => "10111010111001111001101111011001", 
    193 => "01001010011011110011011011001110", 
    194 => "11101010100111110000100111010100", 
    195 => "00101001101100000111110011010110", 
    196 => "00110001101001001011001010101111", 
    197 => "00101010001111110010001100110001", 
    198 => "11000110101001011001010000110000", 
    199 => "00110101101000100110011011000000", 
    200 => "01110100010011101011110000110111", 
    201 => "11111100100000101100101010100110", 
    202 => "11100000100100001101000010110000", 
    203 => "00110011101001111101100000010101", 
    204 => "11110001000001001001100001001010", 
    205 => "01000001111011001101101011110111", 
    206 => "01111111110011010101000000001110", 
    207 => "00010111100100011111011000101111", 
    208 => "01110110010011011101011010001101", 
    209 => "01000011111011111011000001001101", 
    210 => "11001100101010100100110101010100", 
    211 => "11100100100101100000010011011111", 
    212 => "10011110110100011011010111100011", 
    213 => "01001100011010101000100000011011", 
    214 => "11000001001011000001111110111000", 
    215 => "01000110011001010101000101111111", 
    216 => "10011101010111101110101000000100", 
    217 => "00000001100011000011010101011101", 
    218 => "11111010100001110111010001110011", 
    219 => "11111011000010110100000100101110", 
    220 => "10110011011001110001110101011010", 
    221 => "10010010110110111101001001010010", 
    222 => "11101001000100000101011000110011", 
    223 => "01101101110101100100011100010011", 
    224 => "10011010110101110110000110001100", 
    225 => "00110111101000010000110001111010", 
    226 => "01011001111110000001010010001110", 
    227 => "11101011000100110011110010001001", 
    228 => "11001110101010010010011111101110", 
    229 => "10110111011000011100100100110101", 
    230 => "11100001000111001110010111101101", 
    231 => "01111010010001111011000100111100", 
    232 => "10011100110100101101111101011001", 
    233 => "01010101111100100111001100111111", 
    234 => "00011000000101001100111001111001", 
    235 => "01110011110001110011011110111111", 
    236 => "01010011111101111100110111101010", 
    237 => "01011111111111011010101001011011", 
    238 => "11011111001111010110111100010100", 
    239 => "01111000010001001101101110000110", 
    240 => "11001010101011111111001110000001", 
    241 => "10111001011010001100010000111110", 
    242 => "00111000001001000011010000101100", 
    243 => "11000010101000110100000001011111", 
    244 => "00010110000111011100001101110010", 
    245 => "10111100111000100010010100001100", 
    246 => "00101000001111000100100110001011", 
    247 => "11111111000011011001010101000001", 
    248 => "00111001101010000000000101110001", 
    249 => "00001000000011001011001111011110", 
    250 => "11011000101101001110010010011100", 
    251 => "01100100010101101100000110010000", 
    252 => "01111011110010111000010001100001", 
    253 => "11010101001100101011011001110000", 
    254 => "01001000011011000101110001110100", 
    255 => "11010000101110000101011101000010" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

memory_access_guard_1: process (addr1) 
begin
      addr1_tmp <= addr1;
--synthesis translate_off
      if (CONV_INTEGER(addr1) > mem_size-1) then
           addr1_tmp <= (others => '0');
      else 
           addr1_tmp <= addr1;
      end if;
--synthesis translate_on
end process;

memory_access_guard_2: process (addr2) 
begin
      addr2_tmp <= addr2;
--synthesis translate_off
      if (CONV_INTEGER(addr2) > mem_size-1) then
           addr2_tmp <= (others => '0');
      else 
           addr2_tmp <= addr2;
      end if;
--synthesis translate_on
end process;

memory_access_guard_3: process (addr3) 
begin
      addr3_tmp <= addr3;
--synthesis translate_off
      if (CONV_INTEGER(addr3) > mem_size-1) then
           addr3_tmp <= (others => '0');
      else 
           addr3_tmp <= addr3;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem0(CONV_INTEGER(addr0_tmp)); 
        end if;
        if (ce1 = '1') then 
            q1 <= mem0(CONV_INTEGER(addr1_tmp)); 
        end if;
        if (ce2 = '1') then 
            q2 <= mem1(CONV_INTEGER(addr2_tmp)); 
        end if;
        if (ce3 = '1') then 
            q3 <= mem1(CONV_INTEGER(addr3_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity rijndaelDecrypt_hls_Td0 is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0);
        address1 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0);
        address2 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0);
        address3 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of rijndaelDecrypt_hls_Td0 is
    component rijndaelDecrypt_hls_Td0_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR;
            addr1 : IN STD_LOGIC_VECTOR;
            ce1 : IN STD_LOGIC;
            q1 : OUT STD_LOGIC_VECTOR;
            addr2 : IN STD_LOGIC_VECTOR;
            ce2 : IN STD_LOGIC;
            q2 : OUT STD_LOGIC_VECTOR;
            addr3 : IN STD_LOGIC_VECTOR;
            ce3 : IN STD_LOGIC;
            q3 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    rijndaelDecrypt_hls_Td0_rom_U :  component rijndaelDecrypt_hls_Td0_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0,
        addr1 => address1,
        ce1 => ce1,
        q1 => q1,
        addr2 => address2,
        ce2 => ce2,
        q2 => q2,
        addr3 => address3,
        ce3 => ce3,
        q3 => q3);

end architecture;


